<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Rémy Gardette</title>
 <link href="http://remyg.fr/" rel="self"/>
 <link href="http://remyg.fr"/>
 <updated>2013-03-07T12:02:24+00:00</updated>
 <id>http://remyg.fr</id>
 <author>
   <name>Rémy Gardette</name>
   <email>remy.gardette@gmail.com</email>
 </author>

 
 <entry>
   <title>Auto-upload Jekyll after pushing to GitHub</title>
   <link href="http://remyg.fr/2013/03/05/auto-upload-jekyll-after-pushing-to-github"/>
   <updated>2013-03-05T18:30:00+00:00</updated>
   <id>http://remyg.fr/2013/03/05/auto-upload-jekyll-after-pushing-to-github</id>
   <content type="html">&lt;p&gt;My Jekyll site is hosted on a shared web hosting service, provided by OVH. It&amp;#8217;s the most basic service, which consists of a PHP server, a MySql database, and that&amp;#8217;s about it. The only way to change the files on the server is to access it via FTP, as there is no SSH connection available.&lt;/p&gt;

&lt;p&gt;So, with the concept of Jekyll, which is to generate static HTML files and use them for the final web site, the only option I had was to manually upload the &lt;code&gt;_site&lt;/code&gt; folder each time I made some changes in the source code. And this after pushing my changes to GitHub (the sources and generated files are stored in a public GitHub repository).&lt;/p&gt;

&lt;p&gt;But I&amp;#8217;ve actually found another way to automate the process. For this I need my personnal server, which is an old eeePc running Debian I have at home (but can&amp;#8217;t use as a web server, for basic QoS reasons).&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id='clone_the_git_repository'&gt;Clone the git repository&lt;/h2&gt;

&lt;p&gt;I started by cloning the repository on my personnal server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /home/username
$ mkdir jekyll
$ git clone https://github.com/RemyG/remyg.fr.git jekyll&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This create a clone of the repository in &lt;code&gt;/home/username/jekyll&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id='create_the_ftp_upload_script'&gt;Create the FTP upload script&lt;/h2&gt;

&lt;p&gt;To automatically upload my files via FTP, I used &lt;code&gt;lftp&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install lftp&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then I&amp;#8217;ve created the script used to upload my &lt;code&gt;_site&lt;/code&gt; folder to the shared server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ touch /usr/local/bin/ftp-upload-jekyll.sh
$ chmod +x /usr/local/bin/ftp-upload-jekyll.sh
$ vim /usr/local/bin/ftp-upload-jekyll.sh&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The content of the script is a simple &lt;code&gt;mirror&lt;/code&gt; command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh

lftp -u your_username,your_password your_host_url &amp;lt;&amp;lt;EOF

cd /dest_folder/_site # The distant directory
lcd /home/username/jekyll/_site # The local directory

mirror -R

quit 0

EOF&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When this script is executed, it will upload the content of the local &lt;code&gt;_site&lt;/code&gt; folder on the host &lt;code&gt;your_host_url&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id='create_the_git_pull_script'&gt;Create the git pull script&lt;/h2&gt;

&lt;p&gt;Before uploading the website to the server, the repository has to be pulled. I&amp;#8217;ve created a script for it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ touch /usr/local/bin/github-pull-jekyll.sh
$ chmod +x /usr/local/bin/github-pull-jekyll.sh
$ vim /usr/local/bin/github-pull-jekyll.sh&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The content of the script is simply:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh

cd /home/username/jekyll
git pull&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When this script is executed, it will pull the repository.&lt;/p&gt;

&lt;h2 id='create_a_github_postreceive_hook'&gt;Create a GitHub post-receive hook&lt;/h2&gt;

&lt;h3 id='on_my_personnal_server'&gt;On my personnal server&lt;/h3&gt;

&lt;p&gt;I&amp;#8217;ve just created a PHP file, which is exposed on Internet.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /var/www
$ vim github-hook.php&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The content of this file is very simple: first it pulls the repository, then it calls the script &lt;code&gt;ftp-upload-jekyll.sh&lt;/code&gt; to upload the content of the &lt;code&gt;_site&lt;/code&gt; folder to the shared server.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
    `sh /usr/local/bin/github-pull-jekyll.sh`;
    `sh /usr/local/bin/ftp-upload-jekyll.sh`;
?&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id='on_github'&gt;On GitHub&lt;/h3&gt;

&lt;p&gt;Then I just had to create the post-receive hook on GitHub, as described on the &lt;a href='https://help.github.com/articles/post-receive-hooks'&gt;GitHub documentation&lt;/a&gt;. The WebHook URL is the URL of the PHP file on my personnal server.&lt;/p&gt;

&lt;h2 id='conclusion'&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Now, each time I push some changes to my GitHub repository, they are automatically uploaded to my web server, and instantly available to be browsed.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Use Flattr with Wordpress 3.5.1</title>
   <link href="http://remyg.fr/2013/03/05/use-flattr-with-wordpress-351"/>
   <updated>2013-03-05T18:00:00+00:00</updated>
   <id>http://remyg.fr/2013/03/05/use-flattr-with-wordpress-351</id>
   <content type="html">&lt;p&gt;&lt;a href='http://flattr.com/'&gt;Flattr&lt;/a&gt; is a &amp;#8220;social micro-payment system&amp;#8221;, that allows you to make online payments, when you like an article, a blog, a project&amp;#8230;&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve decided to add it to my personnal websites, both the &lt;a href='http://remyg.fr'&gt;Jekyll site&lt;/a&gt; and my &lt;a href='http://blog.remyg.fr'&gt;Wordpress blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Looking at the &lt;a href='https://flattr.com/support/button'&gt;Flattr documentation&lt;/a&gt;, the basic solution for Wordpress.org blogs (hosted blogs) is to use the &lt;a href='https://wordpress.org/extend/plugins/flattr/'&gt;Flattr plugin&lt;/a&gt;. But the current version of the plugin (1.2.0) doesn&amp;#8217;t work with Wordpress 3.5.1. The Flattr button simply isn&amp;#8217;t displayed.&lt;/p&gt;

&lt;p&gt;So I&amp;#8217;ve had to find an alternate solution, which was to simply create a Wordpress function in my theme, and to call this function each time I want to add a Flattr button.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;I&amp;#8217;ve based my code on &lt;a href='http://wpengineer.com/2022/flattr-button-4-wordpress-without-a-plugin/'&gt;this post&lt;/a&gt;, but I&amp;#8217;ve simplified it, as I didn&amp;#8217;t need customization like multi-user handling.&lt;/p&gt;

&lt;p&gt;So the final function, as used on my blog, is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function fb_flattr_link($uid = &amp;#39;ramy&amp;#39;, $cat = &amp;#39;text&amp;#39;, $btn = &amp;#39;compact&amp;#39;) {

	$cat = htmlspecialchars($cat);
	$btn = htmlspecialchars($btn);

	$ftag = &amp;#39;&amp;#39;;
	$tags = get_the_tags( get_the_ID() );
	if ( $tags ) {
		foreach( $tags as $tag ) {
			$ftag .= $tag-&amp;gt;name . &amp;#39;, &amp;#39;;
		}
		$ftag = substr( $ftag, 0, -2 );
	} else {
		$tag = &amp;#39;&amp;#39;;
	}

	$dsc = htmlspecialchars( strip_tags( trim( get_the_excerpt() ) ) );
	$dsc = str_replace( &amp;quot;&amp;#39;&amp;quot;, &amp;quot;&amp;quot;, $dsc );
	$dsc = str_replace( &amp;quot;\n&amp;quot;, &amp;quot; &amp;quot;, $dsc ); // maybe \r\n
	$dsc = substr($dsc, 0, 150);

	$tle = htmlspecialchars( strip_tags( get_the_title() ) );
	$tle = str_replace( &amp;quot;&amp;#39;&amp;quot;, &amp;quot;&amp;quot;, $tle );

	$flattr = &amp;#39;
		&amp;lt;span class=&amp;quot;flattr&amp;quot;&amp;gt;
			&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
				var flattr_uid = \&amp;#39;&amp;#39; . $uid . &amp;#39;\&amp;#39;;
				var flattr_url = \&amp;#39;&amp;#39; . get_permalink() . &amp;#39;\&amp;#39;;
				var flattr_tle = \&amp;#39;&amp;#39; . $tle . &amp;#39;\&amp;#39;;
				var flattr_dsc = \&amp;#39;&amp;#39; . $dsc . &amp;#39;\&amp;#39;;
				var flattr_cat = \&amp;#39;&amp;#39; . $cat . &amp;#39;\&amp;#39;;
				var flattr_tag = \&amp;#39;&amp;#39; . $ftag . &amp;#39;\&amp;#39;;
				var flattr_btn = \&amp;#39;&amp;#39; . $btn . &amp;#39;\&amp;#39;;
			&amp;lt;/script&amp;gt;
			&amp;lt;script src=&amp;quot;http://api.flattr.com/button/load.js&amp;quot; type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
		&amp;lt;/span&amp;gt;
	&amp;#39;;

	echo $flattr;

}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To use it, I simply use this code each time I want to add a button:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php if ( function_exists(&amp;#39;fb_flattr_link&amp;#39;) ) fb_flattr_link(); ?&amp;gt;&lt;/code&gt;&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>RGResponsive</title>
   <link href="http://remyg.fr/2013/01/23/rgresponsive-a-responsive-wordpress-theme"/>
   <updated>2013-01-23T18:00:00+00:00</updated>
   <id>http://remyg.fr/2013/01/23/rgresponsive-a-responsive-wordpress-theme</id>
   <content type="html">&lt;p&gt;I&amp;#8217;ve decided to create my own Wordpress theme, RGResponsive.&lt;/p&gt;

&lt;p&gt;You can find the sources for this theme &lt;a href='https://github.com/RemyG/wordpress-rgresponsive'&gt;on GitHub&lt;/a&gt;, and see it in action &lt;a href='http://blog.remyg.fr'&gt;on my blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can follow the development and post comments &lt;a href='/projects/rgresponsive/'&gt;on this page&lt;/a&gt;.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>PFP</title>
   <link href="http://remyg.fr/2013/01/15/pfp-a-tiny-php-application-framework"/>
   <updated>2013-01-15T18:00:00+00:00</updated>
   <id>http://remyg.fr/2013/01/15/pfp-a-tiny-php-application-framework</id>
   <content type="html">&lt;p&gt;In my free time, I often work on small personal PHP projects. This allows me to keep in touch with the new technologies, frameworks,&amp;#8230; For instance, I&amp;#8217;ve recently started using Bootstrap to create well presented web-applications.&lt;/p&gt;

&lt;p&gt;My issue was that, each time I started a new project, I had to re-create the skeleton for the application. This basically meant copying an old project, remove everything specific, clean all the configuration values,&amp;#8230; before I could start working. That&amp;#8217;s why I decided to create an independant project, which I could use as a skeleton for almost all my PHP applications.&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;But while looking at several existing solutions (Zend, CakePHP, FuelPHP,&amp;#8230;), I&amp;#8217;ve decided that these frameworks were way too heavy and complicated for my needs. I only needed a basic MVC skeleton. Then I found &lt;a href='http://gilbitron.github.com/PIP/'&gt;PIP&lt;/a&gt;, which is a tiny, lightweight MVC framework for LAMP stacks.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve forked the project as &lt;a href='https://github.com/RemyG/PFP'&gt;PFP&lt;/a&gt;, so I could alter it to match my needs. The main modification I&amp;#8217;ve made so far are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;converting all global variables to constants&lt;/li&gt;

&lt;li&gt;using PDO instead of the mysql functions&lt;/li&gt;

&lt;li&gt;creating a global header and footer for the whole application&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With these modifications, I&amp;#8217;ve got my generic application skeleton, that I can use for all my PHP website developments.&lt;/p&gt;

&lt;p&gt;You can find all the information about this project on &lt;a href='/projects/pfp'&gt;this page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This project is released on GitHub &lt;a href='https://github.com/RemyG/PFP'&gt;here&lt;/a&gt; under an MIT license.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Custom PHP Scripts</title>
   <link href="http://remyg.fr/2012/12/27/custom-php-scripts-linkedin-resume"/>
   <updated>2012-12-27T18:00:00+00:00</updated>
   <id>http://remyg.fr/2012/12/27/custom-php-scripts-linkedin-resume</id>
   <content type="html">&lt;p&gt;Some time ago, I’ve decided to centralize my resume information in one place, to avoid having to update it on several places every time I changed anything in it.&lt;br /&gt;I’ve decided to use the LinkedIn interface to update it, as it allows resumes in different languages (my profile &lt;a href='http://www.linkedin.com/in/remygardette/fr'&gt;in French&lt;/a&gt; and &lt;a href='http://www.linkedin.com/in/remygardette/en'&gt;in English&lt;/a&gt;).&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;To retrieve my resume information from my LinkedIn profile, I’ve created a PHP script to scrape the webpage and compile the result in an XML file.&lt;/p&gt;

&lt;p&gt;The resulting file has the following format:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;resume&amp;gt;
    &amp;lt;position&amp;gt;
	&amp;lt;title&amp;gt;position title&amp;lt;/title&amp;gt;
	&amp;lt;company&amp;gt;company&amp;lt;/company&amp;gt;
	&amp;lt;location&amp;gt;location&amp;lt;/location&amp;gt;
	&amp;lt;from&amp;gt;from date&amp;lt;/from&amp;gt;
	&amp;lt;to&amp;gt;to date&amp;lt;/to&amp;gt;
	&amp;lt;description&amp;gt;description&amp;lt;/description&amp;gt;
    &amp;lt;/position&amp;gt;
    &amp;lt;position&amp;gt;
	...
    &amp;lt;/position&amp;gt;
&amp;lt;/resume&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then I can use this file as a source data in other webpages (like &lt;a href='http://remyg.fr/en'&gt;my personal homepage&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;This script uses the &lt;a href='http://sourceforge.net/projects/simplehtmldom/'&gt;Simple HTML DOM library&lt;/a&gt; to parse the HTML source from the webpage.&lt;/p&gt;

&lt;p&gt;The script is in the &lt;code&gt;linkedin.php file&lt;/code&gt;, and needs the library in &lt;code&gt;simple_html_dom.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To run it, just call &lt;code&gt;scrapeResume($resume_url, $dest_file)&lt;/code&gt;, which will create or replace the file &lt;code&gt;$dest_file&lt;/code&gt; with the XML scraping of the resume at &lt;code&gt;$resume_xml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now I could create a custom and lightweight XML marshaller and unmarshaller, to simplify the XML operations.&lt;/p&gt;

&lt;p&gt;The sources can be found &lt;a href='https://github.com/RemyG/PHPScripts'&gt;on GitHub&lt;/a&gt;, and you can directly download the sources as a &lt;a href='https://github.com/RemyG/PHPScripts/zipball/master'&gt;Zip File&lt;/a&gt; or a &lt;a href='https://github.com/RemyG/PHPScripts/tarball/master'&gt;TAR Ball&lt;/a&gt;. You can also simply clone the repository with Git by running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/RemyG/PHPScripts.git&lt;/code&gt;&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>New Blog With Octopress</title>
   <link href="http://remyg.fr/2012/12/21/new-blog-with-octopress"/>
   <updated>2012-12-21T18:00:00+00:00</updated>
   <id>http://remyg.fr/2012/12/21/new-blog-with-octopress</id>
   <content type="html">&lt;p&gt;Welcome on my new blog everybody!&lt;br /&gt;I’ve started it to present my current developments, which I release on GitHub as open-source projects.&lt;br /&gt;You can find my GitHub profile &lt;a href='https://github.com/RemyG'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is an &lt;a href='http://www.octopress.org/'&gt;Octopress&lt;/a&gt; blog, deployed as a GitHub page.&lt;/p&gt;

&lt;p&gt;More news to come soon!&lt;/p&gt;</content>
 </entry>
 
 
</feed>